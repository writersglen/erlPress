
%%% ********************************************************* 
%%% @copyright   2018 Lloyd R. Prentice
%%% @author      Lloyd R. Prentice
%%% @doc         
%%%    License: MIT
%%%    File:    ep_print.erl
%%%    Description: 
%%%    PDF rint routines
%%% @end 
%%% ********************************************************* 

-module (ep_print).

-export([place_pages/2, place_pages/3, place_page/2]).


print(ContentList) ->
    OFile = "test_check_box.pdf",
    PDF = eg_pdf:new(),

    ContentList

   {Serialised, _PageNo} = eg_pdf:export(PDF),
    file:write_file(?PDFDIR ++ OFile,[Serialised]),
    eg_pdf:delete(PDF).

test() ->
    OFile = "test_check_box.pdf",
    PDF = eg_pdf:new(),

    eg_pdf_lib:showGrid(PDF, letter),
    test_check_box(PDF),

   {Serialised, _PageNo} = eg_pdf:export(PDF),
    file:write_file(?PDFDIR ++ OFile,[Serialised]),
    eg_pdf:delete(PDF).

test_checked() ->
    OFile = "test_checked.pdf",
    PDF = eg_pdf:new(),

    test_checked_box(PDF),

   {Serialised, _PageNo} = eg_pdf:export(PDF),
    file:write_file(?PDFDIR ++ OFile,[Serialised]),
    eg_pdf:delete(PDF).


print_grid(GridName, Border, PageDim, BoxDims) ->
    {PX, PY, PW, PH} = PageDim,
    PDF = eg_pdf:new(),
    eg_pdf:set_pagesize(PDF, letter),
    eg_pdf:set_stroke_color(PDF, black),
    eg_pdf:set_line_width(PDF, Border),
    eg_pdf:set_line_join(PDF, bevel_join),
    eg_pdf:set_page(PDF, 1),

     box_outline(PDF, PX, PY, PW, PH),
     eg_pdf:set_stroke_color(PDF, blue),
    [box_outline(PDF,  X,  Y,  W,  H) || {_Header, X, Y, W, H} <- BoxDims],

   {Serialised, _PageNo} = eg_pdf:export(PDF),
    CustomName = GridName ++ "_grid.pdf",
    file:write_file(?ELEMENT_DIR ++ CustomName,[Serialised]),
    eg_pdf:delete(PDF).



print_line() ->
    OFile = "print_line.pdf",
    Line = {{90,540},{522,540}},
    PDF = eg_pdf:new(),
    eg_pdf:set_pagesize(PDF, letter),
    eg_pdf:set_stroke_color(PDF, red),
    eg_pdf:set_line_width(PDF, 1),
    eg_pdf:line(PDF, Line),
   {Serialised, _PageNo} = eg_pdf:export(PDF),
    file:write_file(?ELEMENT_DIR ++ OFile,[Serialised]),
    eg_pdf:delete(PDF).


rint_nested_boxes(X, Y, W, H) ->
   B = 20,
   X1 = X + B,
   Y1 = Y + B,
   W1 = W - (2 * B),
   H1 = H - (2 * B),
   PDF = eg_pdf:new(),
   eg_pdf:set_pagesize(PDF, letter),
   eg_pdf:set_page(PDF, 1),

   outer_box(PDF, X, Y, W, H),
   inner_box(PDF, X1, Y1, W1, H1),

   {Serialized, _PageNo}  = eg_pdf:export(PDF),
   file:write_file("./pdf/elements/nested__boxes.pdf", [Serialized]),
   eg_pdf:delete(PDF).


print_circle() ->
    OFile = "test_circle.pdf",
    PDF = eg_pdf:new(),
    eg_pdf:set_dash(PDF,solid),
    eg_pdf:set_stroke_color(PDF,black),
    eg_pdf:set_fill_color(PDF,red),
    eg_pdf:circle(PDF, {72,720}, 10),
    eg_pdf:path(PDF, fill_stroke),
   {Serialised, _PageNo} = eg_pdf:export(PDF),
    file:write_file(?ELEMENT_DIR ++ OFile,[Serialised]),
    eg_pdf:delete(PDF).

print_solid_circle() ->
    OFile = "test_solid_circle.pdf",
    PDF = eg_pdf:new(),
    eg_pdf:set_dash(PDF,solid),
    eg_pdf:set_stroke_color(PDF,black),
    eg_pdf:circle(PDF, {72,720}, 10),
    eg_pdf:path(PDF, fill_stroke),
   {Serialised, _PageNo} = eg_pdf:export(PDF),
    file:write_file(?ELEMENT_DIR ++ OFile,[Serialised]),
    eg_pdf:delete(PDF).

print_ellipse() ->
    OFile = "test_ellipse.pdf",
    PDF = eg_pdf:new(),
    eg_pdf:set_dash(PDF,solid),
    eg_pdf:set_stroke_color(PDF,black),
    eg_pdf:set_fill_color(PDF, red),
    eg_pdf:ellipse(PDF, {200,720}, {100, 50}),
    eg_pdf:path(PDF, fill_stroke),
   {Serialised, _PageNo} = eg_pdf:export(PDF),
    file:write_file(?ELEMENT_DIR ++ OFile,[Serialised]),
    eg_pdf:delete(PDF).

print_open_ellipse() ->
    OFile = "test_open_ellipse.pdf",
    PDF = eg_pdf:new(),
    eg_pdf:set_dash(PDF,solid),
    eg_pdf:set_stroke_color(PDF,black),
    eg_pdf:ellipse(PDF, {200,720}, {100, 50}),
    eg_pdf:path(PDF, stroke),
   {Serialised, _PageNo} = eg_pdf:export(PDF),
    file:write_file(?ELEMENT_DIR ++ OFile,[Serialised]),
    eg_pdf:delete(PDF).


print_solid_ellipse() ->
    OFile = "test_open_ellipse.pdf",
    PDF = eg_pdf:new(),
    eg_pdf:set_dash(PDF,solid),
    eg_pdf:set_stroke_color(PDF,black),
    eg_pdf:ellipse(PDF, {200,720}, {100, 50}),
    eg_pdf:path(PDF, fill_stroke),
   {Serialised, _PageNo} = eg_pdf:export(PDF),
    file:write_file(?ELEMENT_DIR ++ OFile,[Serialised]),
    eg_pdf:delete(PDF).

print_circle1() ->
    OFile = "test_circle.pdf",
    PDF = eg_pdf:new(),
%    eg_pdf:set_pagesize(PDF, letter),
%    eg_pdf:set_fill_color(PDF, red),
%    eg_pdf:circle(PDF, {X, Y}, R),
%    eg_pdf:path(PDF, close_fill_stroke),

%    eg_pdf:new_page(PDF),
%    eg_pdf:line(PDF,100,100,200,100),
%    eg_pdf:bezier(PDF,100,100,100,200,200,200,200,100),
%    eg_pdf:path(PDF,stroke),
%    eg_pdf:set_fill_color_RGB(PDF,0.5,0.7,0.2),
%    eg_pdf:bezier(PDF,300,100,300,200,500,200,500,100),
%    eg_pdf:path(PDF,close_fill_stroke),
%    eg_pdf:set_fill_color(PDF,purple),
%    eg_pdf:bezier(PDF,{300,400},{300,450},{500,450},{500,400}),
%    eg_pdf:bezier_c(PDF,{500,350},{400,350},{300,400}),
%    eg_pdf:path(PDF,fill),
%    eg_pdf:set_dash(PDF,dash),
%    eg_pdf:set_fill_color(PDF,slateblue),
%    eg_pdf:line(PDF,100,250,400,250),
%    eg_pdf:poly(PDF,[{100,300},{150,350},{200,350},{250,300}]),
%    eg_pdf:path(PDF,fill_stroke),
    eg_pdf:set_dash(PDF,solid),
    eg_pdf:set_stroke_color(PDF,black),
    eg_pdf:circle(PDF, {72,720}, 1),
    eg_pdf:path(PDF, fill_stroke),
    eg_pdf:set_dash(PDF,solid),
    eg_pdf:set_stroke_color(PDF,black),
    eg_pdf:circle(PDF, {72,720}, 1),
    eg_pdf:path(PDF, fill_stroke),
%    eg_pdf:set_stroke_color(PDF, {16#00,16#FF,16#00}),
%    eg_pdf:circle(PDF, {200,300}, 50),
%    eg_pdf:path(PDF, stroke),
%    eg_pdf:ellipse(PDF, {200,300}, {50,100}),
%    eg_pdf:path(PDF, stroke),
%    eg_pdf:ellipse(PDF, {200,300}, {100,50}),
%    eg_pdf:path(PDF, stroke),
%    eg_pdf:circle(PDF, {200,300}, 100),
%    eg_pdf:path(PDF, stroke),
%    eg_pdf:grid(PDF,[50,100,150],[600,700,800]),
%    eg_pdf:round_rect(PDF,{300,600},{200,100},20),
%    eg_pdf:path(PDF, stroke),
%    eg_pdf:rectangle(PDF,{300,600},{200,100}, stroke),

%    eg_pdf:set_page(PDF, 1),


   {Serialised, _PageNo} = eg_pdf:export(PDF),
    file:write_file(?ELEMENT_DIR ++ OFile,[Serialised]),
    eg_pdf:delete(PDF).

%% doc ep_print:print_page_map(Job, "xxx.pdf")

print_page_map(Job, OFile) ->
    Top    = ep_job:page_top_coords(Job),
    Right  = ep_job:page_right_coords(Job),
    Bottom = ep_job:page_bottom_coords(Job),
    Left   = ep_job:page_left_coords(Job),
    {StockWidth, StockHeight} = ep_job:get_stock_dim(Job),
    PDF = eg_pdf:new(),
    eg_pdf:set_pagesize(PDF, StockWidth, StockHeight),
    eg_pdf:set_fill_gray(PDF, 0.75),
    eg_pdf:set_line_width(PDF, 1),
    eg_pdf:set_page(PDF, 1),
    eg_pdf:line(PDF, Top),
    eg_pdf:line(PDF, Right),
    eg_pdf:line(PDF, Bottom),
    eg_pdf:line(PDF, Left),
   {Serialised, _PageNo} = eg_pdf:export(PDF),
    file:write_file(?ELEMENT_DIR ++ OFile,[Serialised]),
    eg_pdf:delete(PDF).

print_crop_marks(Job, OFile) ->
    {NHFrom, NHTo, NVFrom, NVTo} = ep_job:n_crop(Job),
    {EHFrom, EHTo, EVFrom, EVTo} = ep_job:e_crop(Job),
    {SHFrom, SHTo, SVFrom, SVTo} = ep_job:s_crop(Job),
    {WHFrom, WHTo, WVFrom, WVTo} = ep_job:w_crop(Job),
    {StockWidth, StockHeight} = ep_job:get_stock_dim(Job),
    PDF = eg_pdf:new(),
    eg_pdf:set_pagesize(PDF, StockWidth, StockHeight),
    eg_pdf:set_fill_gray(PDF, 0.75),
    eg_pdf:set_line_width(PDF, 1),
    eg_pdf:set_page(PDF, 1),
    eg_pdf:line(PDF, NHFrom, NHTo),
    eg_pdf:line(PDF, NVFrom, NVTo),
    eg_pdf:line(PDF, EHFrom, EHTo),
    eg_pdf:line(PDF, EVFrom, EVTo),
    eg_pdf:line(PDF, SHFrom, SHTo),
    eg_pdf:line(PDF, SVFrom, SVTo),
    eg_pdf:line(PDF, WHFrom, WHTo),
    eg_pdf:line(PDF, WVFrom, WVTo),
   {Serialised, _PageNo} = eg_pdf:export(PDF),
    file:write_file(?ELEMENT_DIR ++ OFile,[Serialised]),
    eg_pdf:delete(PDF).

print_box(Box, OFile) ->
    StrokeType = close,
    {X, Y, Measure, Height} = ep_box:box_spec(Box),

    PDF = eg_pdf:new(),
    eg_pdf:set_pagesize(PDF, letter),
    eg_pdf:set_fill_gray(PDF, 0.75),
    eg_pdf:set_line_width(PDF, 1),
    eg_pdf:set_page(PDF, 1),
%    eg_pdf:set_fill_color(PDF, red),

    eg_pdf:rectangle(PDF, X, Y, Measure, Height, StrokeType),

   {Serialised, _PageNo} = eg_pdf:export(PDF),
    file:write_file(?ELEMENT_DIR ++ OFile,[Serialised]),
    eg_pdf:delete(PDF).



print_red_box(OFile) ->
    PDF = eg_pdf:new(),
    eg_pdf:set_pagesize(PDF,letter),
    eg_pdf:set_page(PDF,1),
    eg_pdf:set_fill_color(PDF,red),

    eg_pdf:rectangle(PDF, 72,648,180,72, fill),

    {Serialised, _PageNo} = eg_pdf:export(PDF),
    file:write_file(?ELEMENT_DIR ++ OFile,[Serialised]),
    eg_pdf:delete(PDF).

print_two_column_red(OFile) ->
    PDF = eg_pdf:new(),
    eg_pdf:set_pagesize(PDF,letter),
    eg_pdf:set_page(PDF,1),
    eg_pdf:set_fill_color(PDF,red),

    eg_pdf:rectangle(PDF, 72,  576, 180, 144, fill),
    eg_pdf:rectangle(PDF, 270, 576, 180, 144, fill),

    {Serialised, _PageNo} = eg_pdf:export(PDF),

    file:write_file(?ELEMENT_DIR ++ OFile,[Serialised]),
    eg_pdf:delete(PDF).

dot_test() ->
    OFile = "test_dot.pdf",
    PDF = eg_pdf:new(),

    test_dot(PDF),

   {Serialised, _PageNo} = eg_pdf:export(PDF),
    file:write_file(?PDFDIR ++ OFile,[Serialised]),
    eg_pdf:delete(PDF).

ellipse_test() ->
    OFile = "test_ellipse.pdf",
    PDF = eg_pdf:new(),

    Ellipse = test(),
    Ellipse1 = ep_ellipse:update_fill_color(red, Ellipse),
    ep_ellipse:ellipse(PDF, Ellipse1),

   {Serialised, _PageNo} = eg_pdf:export(PDF),
    file:write_file(?PDFDIR ++ OFile,[Serialised]),
    eg_pdf:delete(PDF).

ellipse_test_open() ->
    OFile = "test_open_ellipse.pdf",
    PDF = eg_pdf:new(),

    Ellipse = test(),
    Ellipse1 = ep_ellipse:update_fill_color(white, Ellipse),
    ep_ellipse:ellipse(PDF, Ellipse1),

   {Serialised, _PageNo} = eg_pdf:export(PDF),
    file:write_file(?PDFDIR ++ OFile,[Serialised]),
    eg_pdf:delete(PDF).

ellipse_test_solid() ->
    OFile = "test_solid_ellipse.pdf",
    PDF = eg_pdf:new(),

    Ellipse = test_colors(),
    Ellipse1 = ep_ellipse:update_outline_color(red, Ellipse),
    ep_ellipse:ellipse(PDF, Ellipse1),

   {Serialised, _PageNo} = eg_pdf:export(PDF),
    file:write_file(?PDFDIR ++ OFile,[Serialised]),
    eg_pdf:delete(PDF).


line_test() ->
    OFile = "test_line.pdf",
    PDF = eg_pdf:new(),

    Line = line_parameters(),
    ep_line:line(PDF, Line),

   {Serialised, _PageNo} = eg_pdf:export(PDF),
    file:write_file(?PDFDIR ++ OFile,[Serialised]),
    eg_pdf:delete(PDF).


rectangle_test() ->
    OFile = "test_rectangle.pdf",
    PDF = eg_pdf:new(),

    Rectangle = test_rectangle(),
    ep_rectangle:rectangle(PDF, Rectangle),

   {Serialised, _PageNo} = eg_pdf:export(PDF),
    file:write_file(?PDFDIR ++ OFile,[Serialised]),
    eg_pdf:delete(PDF).





test() ->
    OFile = "test_circle.pdf",
    PDF = eg_pdf:new(),

    Circle = test_circle(),
    circle(PDF, Circle),

   {Serialised, _PageNo} = eg_pdf:export(PDF),
    file:write_file(?PDF_DIR ++ OFile,[Serialised]),
    eg_pdf:delete(PDF).

