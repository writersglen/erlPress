
Asciidoc macro:

<name>::<target>[<attrlist>] (for block macros)

Here's how it might represent an erlPress circle:

mycircle:circle[100, 100, 10, 1, solid, black, white]

Where:
   100, 100 -> position
   10       -> radius
   1        -> border
   solid    -> border style
   black    -> border color
   white    -> fill color

Here's how it might map to erlPress:

mycircle() ->
   CircleMap = ep_circle:create({0, 0}, 10),
   CircleMap1 = maps:put(border, 1, CircleMap),
   CircleMap2 = maps:put(border_style, solid, CircleMap1),
   CircleMap3 = maps:put(border_color, black, CircleMap2),
   maps:put(fill_color, white, CircleMap3).

There is a tad bit of hand-waving here. And no doubt we can refine and optimize.

-- Maybe name the parameters in the ascidoc macro
-- Or call up a default circle map so circle instantiation would look like:

   CircleMap  = ep_circle:default_circle(),
   CircleMap1 = maps:put(center, {100, 100}, CircleMap), 
   CircleMap2 = maps:put(radius, 10, CircleMap1),
   CircleMap3 = maps:put(border, 1, CircleMap2),
   CircleMap4 = maps:put(border_style, solid, CircleMap3),
   CircleMap5 = maps:put(border_color, black, CircleMap4),
   maps:put(fill_color, white, CircleMap5)

Pity there isn't, or I haven't found, a function that would load up a map all inwith multiple properties all in one operation.

 

 

